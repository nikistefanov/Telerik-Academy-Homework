Design pattern: Factory Method
	* 

Design pattern: Strategy
	* In WebServerConsole the response provider can vary

Design pattern: Template Method
	* 
	* 

Design pattern: Chain of Responsibility
	* 

Design pattern: Decorator
	* 

Found bugs:
	* In class ActionDescriptor removed multiple split symbols
	* In class JsonActionResult removed the HighQualityCodeExamPoints given throug the constructor
	* In class JsonActionResultWithoutCaching removed the throwen Exception
	* In class HttpResponse change the way of providing the elements for the HttpRequest constructor
	* Fixed the bug where Protocol version was checked "request.ProtocolVersion.Major < 3"

Found bottleneck:
	* 

Single responsibility principle
	* 

Open/closed principle
	* The Response provider can be interganged by the client without touching the original code

Liskov substitution principle
	* 

Interface segregation principle
	* 

Dependency inversion principle
	* WebConsole expects IResponseProvider which gives us the possibillity of defining own IResponseProvider
